import dayjs from "dayjs";
import {
  User,
  Client,
  Coach,
  Program,
  AssessmentTemplate,
  AssessmentAssignment,
  AssessmentResult,
  Session,
  Task,
  Goal,
  GoalMilestone,
  GoalMetric,
  MessageThread,
  Message,
  Attachment,
  TypingIndicator,
  ModerationReport,
  AuditLog,
  Invoice,
  Invitation,
  CoachRequest,
  DashboardSummary,
} from "../lib/types";

// Generate realistic mock data

// Mock Users
const users: User[] = [
  {
    id: "user-1",
    email: "admin@thryvecircle.com",
    name: "Admin User",
    role: "admin",
    avatar: "https://i.pravatar.cc/150?img=1",
    createdAt: dayjs().subtract(365, "days").toISOString(),
  },
  {
    id: "user-2",
    email: "coach1@thryvecircle.com",
    name: "Sarah Johnson",
    role: "coach",
    avatar: "https://i.pravatar.cc/150?img=2",
    createdAt: dayjs().subtract(300, "days").toISOString(),
  },
  {
    id: "user-3",
    email: "coach2@thryvecircle.com",
    name: "Michael Chen",
    role: "coach",
    avatar: "https://i.pravatar.cc/150?img=3",
    createdAt: dayjs().subtract(280, "days").toISOString(),
  },
];

// Mock Coaches
const coaches: Coach[] = [
  {
    id: "coach-1",
    name: "Sarah Johnson",
    email: "sarah@thrivecircle.com",
    bio: "Certified life coach with 8+ years experience in personal development and goal achievement. Specializes in helping clients overcome obstacles and achieve their full potential through evidence-based coaching techniques.",
    specialties: ["Life Coaching", "Career Development", "Mindfulness"],
    avatar: "https://i.pravatar.cc/150?img=2",
    availability: {
      days: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
      hours: "9:00 AM - 6:00 PM",
    },
    clients: ["client-1", "client-3", "client-6", "client-9", "client-12"],
    sessions: ["session-1", "session-3", "session-6", "session-9"],
    rating: 4.8,
    reviewCount: 24,
    hourlyRate: 150,
    totalEarnings: 18000,
    status: "active",
    isVerified: true,
    certifications: ["ICF Professional Certified Coach", "Life Coach Institute", "Mindfulness-Based Coaching"],
    experience: 8,
    languages: ["English", "Spanish"],
    createdAt: dayjs().subtract(300, "days").toISOString(),
    updatedAt: dayjs().subtract(5, "days").toISOString(),
  },
  {
    id: "coach-2",
    name: "Michael Chen",
    email: "michael@thrivecircle.com",
    bio: "Executive coach specializing in leadership development and organizational transformation. Works with C-suite executives and emerging leaders to enhance their strategic thinking and influence skills.",
    specialties: ["Executive Coaching", "Leadership", "Team Building"],
    avatar: "https://i.pravatar.cc/150?img=3",
    availability: {
      days: ["Monday", "Tuesday", "Wednesday", "Thursday"],
      hours: "10:00 AM - 7:00 PM",
    },
    clients: ["client-2", "client-5", "client-8", "client-11"],
    sessions: ["session-2", "session-5", "session-8", "session-11"],
    rating: 4.9,
    reviewCount: 18,
    hourlyRate: 250,
    totalEarnings: 22500,
    status: "active",
    isVerified: true,
    certifications: ["ICF Master Certified Coach", "Harvard Executive Coaching", "Organizational Psychology"],
    experience: 12,
    languages: ["English", "Mandarin"],
    createdAt: dayjs().subtract(280, "days").toISOString(),
    updatedAt: dayjs().subtract(3, "days").toISOString(),
  },
  {
    id: "coach-3",
    name: "Emma Rodriguez",
    email: "emma@thrivecircle.com",
    bio: "Wellness coach focused on holistic health and work-life balance. Combines traditional coaching with wellness practices to help clients achieve sustainable lifestyle changes.",
    specialties: ["Wellness", "Stress Management", "Work-Life Balance"],
    avatar: "https://i.pravatar.cc/150?img=4",
    availability: {
      days: ["Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      hours: "11:00 AM - 8:00 PM",
    },
    clients: ["client-4", "client-7", "client-10"],
    sessions: ["session-4", "session-7", "session-10"],
    rating: 4.7,
    reviewCount: 15,
    hourlyRate: 120,
    totalEarnings: 10800,
    status: "active",
    isVerified: true,
    certifications: ["Wellness Coach Certification", "Stress Management Specialist", "Holistic Health Practitioner"],
    experience: 6,
    languages: ["English", "Spanish"],
    createdAt: dayjs().subtract(250, "days").toISOString(),
    updatedAt: dayjs().subtract(1, "day").toISOString(),
  },
  {
    id: "coach-4",
    name: "David Thompson",
    email: "david@thrivecircle.com",
    bio: "Career transition specialist helping professionals navigate major career changes and find their true calling. Expert in resume building, interview preparation, and networking strategies.",
    specialties: ["Career Transition", "Resume Building", "Interview Prep"],
    avatar: "https://i.pravatar.cc/150?img=5",
    availability: {
      days: ["Monday", "Wednesday", "Friday"],
      hours: "1:00 PM - 9:00 PM",
    },
    clients: [],
    sessions: [],
    rating: 4.6,
    reviewCount: 8,
    hourlyRate: 100,
    totalEarnings: 3200,
    status: "pending",
    isVerified: false,
    certifications: ["Career Coach Certification", "Resume Writing Specialist", "HR Professional"],
    experience: 4,
    languages: ["English"],
    createdAt: dayjs().subtract(30, "days").toISOString(),
    updatedAt: dayjs().subtract(2, "days").toISOString(),
  },
  {
    id: "coach-5",
    name: "Lisa Park",
    email: "lisa@thrivecircle.com",
    bio: "Relationship and communication coach specializing in interpersonal dynamics, conflict resolution, and building meaningful connections in both personal and professional settings.",
    specialties: ["Relationships", "Communication", "Conflict Resolution"],
    avatar: "https://i.pravatar.cc/150?img=6",
    availability: {
      days: ["Tuesday", "Thursday", "Saturday"],
      hours: "10:00 AM - 6:00 PM",
    },
    clients: [],
    sessions: [],
    rating: 4.5,
    reviewCount: 12,
    hourlyRate: 130,
    totalEarnings: 7800,
    status: "active",
    isVerified: true,
    certifications: ["Relationship Coach Certification", "Communication Specialist", "Conflict Resolution Mediator"],
    experience: 5,
    languages: ["English", "Korean"],
    createdAt: dayjs().subtract(180, "days").toISOString(),
    updatedAt: dayjs().subtract(7, "days").toISOString(),
  },
];

// Mock Programs
const programs: Program[] = [
  {
    id: "program-1",
    name: "Life Transformation 90-Day",
    description:
      "A comprehensive 90-day program designed to help clients achieve lasting personal transformation.",
    duration: 12,
    modules: [
      {
        id: "mod-1-1",
        name: "Foundation & Goal Setting",
        description:
          "Establish your foundation and set clear, achievable goals.",
        order: 1,
        duration: 7,
        content:
          "Week 1 focuses on understanding your current situation and setting meaningful goals.",
      },
      {
        id: "mod-1-2",
        name: "Habit Formation",
        description: "Learn to build positive habits that support your goals.",
        order: 2,
        duration: 14,
        content: "Week 2-3 focuses on habit formation and consistency.",
      },
    ],
    milestones: [
      {
        id: "mil-1-1",
        name: "Goal Clarity",
        description: "Achieve clear understanding of your goals and values.",
        order: 1,
        targetDate: dayjs().add(7, "days").toISOString(),
        completed: false,
      },
      {
        id: "mil-1-2",
        name: "First Habit Established",
        description: "Successfully establish your first positive habit.",
        order: 2,
        targetDate: dayjs().add(21, "days").toISOString(),
        completed: false,
      },
    ],
    clients: [],
    createdAt: dayjs().subtract(200, "days").toISOString(),
  },
  {
    id: "program-2",
    name: "Executive Leadership",
    description:
      "Advanced leadership development program for senior executives.",
    duration: 16,
    modules: [
      {
        id: "mod-2-1",
        name: "Leadership Fundamentals",
        description: "Core leadership principles and practices.",
        order: 1,
        duration: 14,
        content:
          "Understanding leadership styles and developing your unique approach.",
      },
    ],
    milestones: [
      {
        id: "mil-2-1",
        name: "Leadership Assessment",
        description: "Complete comprehensive leadership assessment.",
        order: 1,
        targetDate: dayjs().add(14, "days").toISOString(),
        completed: false,
      },
    ],
    clients: [],
    createdAt: dayjs().subtract(180, "days").toISOString(),
  },
];

// Mock Clients
const clients: Client[] = [
  {
    id: "client-1",
    name: "John Smith",
    email: "john.smith@email.com",
    phone: "+1 (555) 123-4567",
    company: "Tech Solutions Inc",
    status: "active",
    coachId: "coach-1",
    programId: "program-1",
    avatar: "https://i.pravatar.cc/150?img=10",
    goals: ["Career advancement", "Work-life balance", "Leadership skills"],
    assessmentCount: 3,
    sessionCount: 8,
    lastSession: dayjs().subtract(5, "days").toISOString(),
    nextSession: dayjs().add(3, "days").toISOString(),
    totalSpent: 2400,
    notes: ["Initial consultation completed", "Follow-up scheduled"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(180, "days").toISOString(),
    updatedAt: dayjs().subtract(5, "days").toISOString(),
  },
  {
    id: "client-2",
    name: "Sarah Wilson",
    email: "sarah.wilson@email.com",
    phone: "+1 (555) 234-5678",
    company: "Marketing Pro",
    status: "active",
    coachId: "coach-2",
    programId: "program-2",
    avatar: "https://i.pravatar.cc/150?img=11",
    goals: ["Business growth", "Team management", "Strategic planning"],
    assessmentCount: 2,
    sessionCount: 12,
    lastSession: dayjs().subtract(2, "days").toISOString(),
    nextSession: dayjs().add(7, "days").toISOString(),
    totalSpent: 3600,
    notes: ["Leadership assessment completed", "Strategic planning in progress"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(240, "days").toISOString(),
    updatedAt: dayjs().subtract(2, "days").toISOString(),
  },
  {
    id: "client-3",
    name: "Michael Brown",
    email: "michael.brown@email.com",
    phone: "+1 (555) 345-6789",
    company: "Financial Services",
    status: "active",
    coachId: "coach-1",
    programId: "program-3",
    avatar: "https://i.pravatar.cc/150?img=12",
    goals: ["Stress management", "Career transition", "Personal development"],
    assessmentCount: 4,
    sessionCount: 6,
    lastSession: dayjs().subtract(10, "days").toISOString(),
    nextSession: dayjs().add(14, "days").toISOString(),
    totalSpent: 1800,
    notes: ["Stress assessment completed", "Wellness plan developed"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(120, "days").toISOString(),
    updatedAt: dayjs().subtract(10, "days").toISOString(),
  },
  {
    id: "client-4",
    name: "Emily Davis",
    email: "emily.davis@email.com",
    phone: "+1 (555) 456-7890",
    company: "Healthcare Plus",
    status: "active",
    coachId: "coach-3",
    programId: "program-1",
    avatar: "https://i.pravatar.cc/150?img=13",
    goals: ["Leadership development", "Communication skills", "Team building"],
    assessmentCount: 2,
    sessionCount: 15,
    lastSession: dayjs().subtract(1, "day").toISOString(),
    nextSession: dayjs().add(5, "days").toISOString(),
    totalSpent: 4500,
    notes: ["Leadership assessment completed", "Communication skills improving"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(300, "days").toISOString(),
    updatedAt: dayjs().subtract(1, "day").toISOString(),
  },
  {
    id: "client-5",
    name: "David Johnson",
    email: "david.johnson@email.com",
    phone: "+1 (555) 567-8901",
    company: "Education First",
    status: "inactive",
    coachId: "coach-2",
    programId: "program-2",
    avatar: "https://i.pravatar.cc/150?img=14",
    goals: ["Career change", "Skill development", "Networking"],
    assessmentCount: 1,
    sessionCount: 3,
    lastSession: dayjs().subtract(45, "days").toISOString(),
    nextSession: null,
    totalSpent: 900,
    notes: ["Career assessment completed", "On hold due to personal circumstances"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(90, "days").toISOString(),
    updatedAt: dayjs().subtract(45, "days").toISOString(),
  },
  {
    id: "client-6",
    name: "Lisa Anderson",
    email: "lisa.anderson@email.com",
    phone: "+1 (555) 678-9012",
    company: "Retail Solutions",
    status: "active",
    coachId: "coach-1",
    programId: "program-3",
    avatar: "https://i.pravatar.cc/150?img=15",
    goals: ["Work-life balance", "Stress reduction", "Personal growth"],
    assessmentCount: 3,
    sessionCount: 9,
    lastSession: dayjs().subtract(7, "days").toISOString(),
    nextSession: dayjs().add(10, "days").toISOString(),
    totalSpent: 2700,
    notes: ["Work-life balance assessment completed", "Stress management techniques implemented"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(150, "days").toISOString(),
    updatedAt: dayjs().subtract(7, "days").toISOString(),
  },
  {
    id: "client-7",
    name: "Robert Taylor",
    email: "robert.taylor@email.com",
    phone: "+1 (555) 789-0123",
    company: "Consulting Group",
    status: "active",
    coachId: "coach-3",
    programId: "program-1",
    avatar: "https://i.pravatar.cc/150?img=16",
    goals: ["Executive presence", "Strategic thinking", "Influence skills"],
    assessmentCount: 2,
    sessionCount: 18,
    lastSession: dayjs().subtract(3, "days").toISOString(),
    nextSession: dayjs().add(2, "days").toISOString(),
    totalSpent: 5400,
    notes: ["Executive assessment completed", "Strategic planning in progress"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(365, "days").toISOString(),
    updatedAt: dayjs().subtract(3, "days").toISOString(),
  },
  {
    id: "client-8",
    name: "Jennifer Martinez",
    email: "jennifer.martinez@email.com",
    phone: "+1 (555) 890-1234",
    company: "Manufacturing Co",
    status: "active",
    coachId: "coach-2",
    programId: "program-2",
    avatar: "https://i.pravatar.cc/150?img=17",
    goals: ["Team leadership", "Process improvement", "Change management"],
    assessmentCount: 1,
    sessionCount: 6,
    lastSession: dayjs().subtract(12, "days").toISOString(),
    nextSession: dayjs().add(8, "days").toISOString(),
    totalSpent: 1800,
    notes: ["Team leadership assessment completed", "Change management plan developed"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(200, "days").toISOString(),
    updatedAt: dayjs().subtract(12, "days").toISOString(),
  },
  {
    id: "client-9",
    name: "William Garcia",
    email: "william.garcia@email.com",
    phone: "+1 (555) 901-2345",
    company: "Real Estate Pro",
    status: "archived",
    coachId: "coach-1",
    programId: "program-3",
    avatar: "https://i.pravatar.cc/150?img=18",
    goals: ["Business development", "Sales skills", "Client relationships"],
    assessmentCount: 2,
    sessionCount: 4,
    lastSession: dayjs().subtract(90, "days").toISOString(),
    nextSession: null,
    totalSpent: 1200,
    notes: ["Business assessment completed", "Client relationship skills improved"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(180, "days").toISOString(),
    updatedAt: dayjs().subtract(90, "days").toISOString(),
  },
  {
    id: "client-10",
    name: "Amanda Rodriguez",
    email: "amanda.rodriguez@email.com",
    phone: "+1 (555) 012-3456",
    company: "Legal Services",
    status: "active",
    coachId: "coach-3",
    programId: "program-1",
    avatar: "https://i.pravatar.cc/150?img=19",
    goals: ["Work-life balance", "Stress management", "Career advancement"],
    assessmentCount: 3,
    sessionCount: 11,
    lastSession: dayjs().subtract(4, "days").toISOString(),
    nextSession: dayjs().add(6, "days").toISOString(),
    totalSpent: 3300,
    notes: ["Work-life balance assessment completed", "Stress management techniques implemented"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(270, "days").toISOString(),
    updatedAt: dayjs().subtract(4, "days").toISOString(),
  },
  {
    id: "client-11",
    name: "Christopher Lee",
    email: "christopher.lee@email.com",
    phone: "+1 (555) 123-4567",
    company: "Creative Agency",
    status: "active",
    coachId: "coach-2",
    programId: "program-2",
    avatar: "https://i.pravatar.cc/150?img=20",
    goals: ["Creative leadership", "Team collaboration", "Project management"],
    assessmentCount: 2,
    sessionCount: 7,
    lastSession: dayjs().subtract(8, "days").toISOString(),
    nextSession: dayjs().add(12, "days").toISOString(),
    totalSpent: 2100,
    notes: ["Creative leadership assessment completed", "Team collaboration improving"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(160, "days").toISOString(),
    updatedAt: dayjs().subtract(8, "days").toISOString(),
  },
  {
    id: "client-12",
    name: "Jessica White",
    email: "jessica.white@email.com",
    phone: "+1 (555) 234-5678",
    company: "Non-Profit Org",
    status: "active",
    coachId: "coach-1",
    programId: "program-3",
    avatar: "https://i.pravatar.cc/150?img=21",
    goals: ["Non-profit leadership", "Fundraising skills", "Community impact"],
    assessmentCount: 1,
    sessionCount: 5,
    lastSession: dayjs().subtract(15, "days").toISOString(),
    nextSession: dayjs().add(20, "days").toISOString(),
    totalSpent: 1500,
    notes: ["Non-profit leadership assessment completed", "Fundraising plan developed"],
    sessions: [],
    tasks: [],
    invoices: [],
    createdAt: dayjs().subtract(120, "days").toISOString(),
    updatedAt: dayjs().subtract(15, "days").toISOString(),
  },
];

// Mock Assessment Templates
const assessmentTemplates: AssessmentTemplate[] = [
  {
    id: "template-1",
    name: "Goal Booster",
    description: "Clarifies one major goal with importance, obstacles, and SMART criteria. Output: one-page goal definition with risk flags.",
    questions: [
      {
        id: "q-1-1",
        type: "long-text",
        question: "What is the one major goal you want to focus on right now? Be as specific as possible.",
        required: true,
        placeholder: "Describe your goal in detail...",
        maxLength: 300,
        order: 1,
        category: "Goal Definition",
      },
      {
        id: "q-1-2",
        type: "likert",
        question: "How important is this goal to you on a scale of 1-10?",
        required: true,
        options: ["1 - Not Important", "2", "3", "4", "5 - Somewhat Important", "6", "7", "8", "9", "10 - Extremely Important"],
        scale: 10,
        order: 2,
        category: "Goal Importance",
      },
      {
        id: "q-1-3",
        type: "multi-select",
        question: "What obstacles are currently preventing you from achieving this goal?",
        required: true,
        options: ["Lack of time", "Lack of resources", "Fear of failure", "Lack of knowledge", "Procrastination", "External circumstances", "Self-doubt", "Other"],
        order: 3,
        category: "Obstacles",
      },
      {
        id: "q-1-4",
        type: "short-text",
        question: "What is your target completion date for this goal?",
        required: true,
        placeholder: "e.g., December 31, 2024",
        maxLength: 50,
        order: 4,
        category: "Timeline",
      },
      {
        id: "q-1-5",
        type: "long-text",
        question: "How will you measure success? What specific indicators will tell you that you've achieved this goal?",
        required: true,
        placeholder: "Describe measurable outcomes...",
        maxLength: 250,
        order: 5,
        category: "Success Metrics",
      },
      {
        id: "q-1-6",
        type: "short-text",
        question: "What is the first concrete step you will take toward this goal?",
        required: true,
        placeholder: "e.g., Research online courses, Schedule consultation...",
        maxLength: 150,
        order: 6,
        category: "First Step",
      },
      {
        id: "q-1-7",
        type: "rating",
        question: "How confident are you that you can achieve this goal?",
        required: true,
        options: ["1 - Not Confident", "2", "3", "4", "5 - Very Confident"],
        order: 7,
        category: "Confidence Level",
      },
    ],
    category: "Goal Setting",
    tags: ["goals", "planning", "SMART", "obstacles", "motivation"],
    estimatedTime: 20,
    version: "1.0",
    isActive: true,
    settings: {
      allowPaging: true,
      questionsPerPage: 2,
      allowTiming: true,
      timeLimit: 25,
      allowResume: true,
      allowRandomization: false,
      showProgressBar: true,
      allowReview: true,
      allowComments: true,
      requireCompletion: true,
    },
    branding: {
      primaryColor: "#FF6B35",
      secondaryColor: "#F7931E",
      showCoachBranding: true,
      coachName: "Sarah Johnson",
    },
    createdAt: dayjs().subtract(30, "days").toISOString(),
    updatedAt: dayjs().subtract(5, "days").toISOString(),
    createdBy: "coach-1",
  },
  {
    id: "template-2",
    name: "Communication Clarity",
    description: "Mix of scenarios and self-ratings on clarity, assertiveness, and listening. Output: radar chart + weakest domain tips.",
    questions: [
      {
        id: "q-2-1",
        type: "likert",
        question: "I clearly express my thoughts and ideas to others",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 1,
        category: "Clarity",
      },
      {
        id: "q-2-2",
        type: "likert",
        question: "I speak up assertively when I disagree with someone",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 2,
        category: "Assertiveness",
      },
      {
        id: "q-2-3",
        type: "likert",
        question: "I actively listen and show interest when others are speaking",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 3,
        category: "Listening",
      },
      {
        id: "q-2-4",
        type: "single-select",
        question: "In a meeting where your idea is dismissed, you would:",
        required: true,
        options: ["Stay quiet and accept it", "Ask for clarification on why it was dismissed", "Defend your idea aggressively", "Wait for a better moment to reintroduce it", "Ask for feedback to improve the idea"],
        order: 4,
        category: "Assertiveness Scenarios",
      },
      {
        id: "q-2-5",
        type: "single-select",
        question: "When someone interrupts you while speaking, you typically:",
        required: true,
        options: ["Stop talking immediately", "Continue speaking to finish your point", "Ask them to wait until you're done", "Get frustrated and stop engaging", "Pause and ask what they want to say"],
        order: 5,
        category: "Communication Scenarios",
      },
      {
        id: "q-2-6",
        type: "likert",
        question: "I can explain complex ideas in simple terms",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 6,
        category: "Clarity",
      },
      {
        id: "q-2-7",
        type: "likert",
        question: "I ask clarifying questions when I don't understand something",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 7,
        category: "Listening",
      },
      {
        id: "q-2-8",
        type: "single-select",
        question: "Your colleague seems upset but won't talk about it. You would:",
        required: true,
        options: ["Leave them alone", "Force them to talk about it", "Ask if they're okay and offer support", "Tell others about the situation", "Ignore the situation entirely"],
        order: 8,
        category: "Listening Scenarios",
      },
    ],
    category: "Communication",
    tags: ["communication", "assertiveness", "listening", "clarity", "interpersonal"],
    estimatedTime: 15,
    version: "1.0",
    isActive: true,
    settings: {
      allowPaging: true,
      questionsPerPage: 2,
      allowTiming: true,
      timeLimit: 20,
      allowResume: true,
      allowRandomization: true,
      showProgressBar: true,
      allowReview: true,
      allowComments: true,
      requireCompletion: true,
    },
    branding: {
      primaryColor: "#1976D2",
      secondaryColor: "#42A5F5",
      showCoachBranding: true,
      coachName: "Michael Chen",
    },
    createdAt: dayjs().subtract(45, "days").toISOString(),
    updatedAt: dayjs().subtract(10, "days").toISOString(),
    createdBy: "coach-2",
  },
  {
    id: "template-3",
    name: "Emotional Intelligence",
    description: "20 Likert items across 5 domains: self-awareness, regulation, empathy, social skills, motivation. Output: domain bars + guidance.",
    questions: [
      {
        id: "q-3-1",
        type: "likert",
        question: "I am aware of my emotional triggers and what causes me to react strongly",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 1,
        category: "Self-Awareness",
      },
      {
        id: "q-3-2",
        type: "likert",
        question: "I can control my emotions even in stressful situations",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 2,
        category: "Self-Regulation",
      },
      {
        id: "q-3-3",
        type: "likert",
        question: "I can sense how others are feeling without them telling me",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 3,
        category: "Empathy",
      },
      {
        id: "q-3-4",
        type: "likert",
        question: "I can build rapport and maintain relationships easily",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 4,
        category: "Social Skills",
      },
      {
        id: "q-3-5",
        type: "likert",
        question: "I am driven by internal motivation rather than external rewards",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 5,
        category: "Motivation",
      },
      {
        id: "q-3-6",
        type: "likert",
        question: "I can identify the specific emotions I am experiencing",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 6,
        category: "Self-Awareness",
      },
      {
        id: "q-3-7",
        type: "likert",
        question: "I can delay gratification to achieve long-term goals",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 7,
        category: "Self-Regulation",
      },
      {
        id: "q-3-8",
        type: "likert",
        question: "I can understand perspectives different from my own",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 8,
        category: "Empathy",
      },
      {
        id: "q-3-9",
        type: "likert",
        question: "I can resolve conflicts and disagreements effectively",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 9,
        category: "Social Skills",
      },
      {
        id: "q-3-10",
        type: "likert",
        question: "I maintain optimism even when facing setbacks",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 10,
        category: "Motivation",
      },
      {
        id: "q-3-11",
        type: "likert",
        question: "I can recognize how my emotions affect my thoughts and decisions",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 11,
        category: "Self-Awareness",
      },
      {
        id: "q-3-12",
        type: "likert",
        question: "I can adapt my behavior to different social situations",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 12,
        category: "Self-Regulation",
      },
      {
        id: "q-3-13",
        type: "likert",
        question: "I can comfort others when they are upset",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 13,
        category: "Empathy",
      },
      {
        id: "q-3-14",
        type: "likert",
        question: "I can influence and inspire others",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 14,
        category: "Social Skills",
      },
      {
        id: "q-3-15",
        type: "likert",
        question: "I am committed to continuous personal growth",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 15,
        category: "Motivation",
      },
      {
        id: "q-3-16",
        type: "likert",
        question: "I can accurately assess my strengths and weaknesses",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 16,
        category: "Self-Awareness",
      },
      {
        id: "q-3-17",
        type: "likert",
        question: "I can manage stress and pressure effectively",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 17,
        category: "Self-Regulation",
      },
      {
        id: "q-3-18",
        type: "likert",
        question: "I can read social cues and body language",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 18,
        category: "Empathy",
      },
      {
        id: "q-3-19",
        type: "likert",
        question: "I can work effectively in teams and groups",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 19,
        category: "Social Skills",
      },
      {
        id: "q-3-20",
        type: "likert",
        question: "I am resilient and can bounce back from failures",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 20,
        category: "Motivation",
      },
    ],
    category: "Emotional Intelligence",
    tags: ["EQ", "self-awareness", "empathy", "social skills", "motivation", "regulation"],
    estimatedTime: 25,
    version: "1.0",
    isActive: true,
    settings: {
      allowPaging: true,
      questionsPerPage: 5,
      allowTiming: true,
      timeLimit: 35,
      allowResume: true,
      allowRandomization: true,
      showProgressBar: true,
      allowReview: true,
      allowComments: true,
      requireCompletion: true,
    },
    branding: {
      primaryColor: "#9C27B0",
      secondaryColor: "#E1BEE7",
      showCoachBranding: true,
      coachName: "Emma Rodriguez",
    },
    createdAt: dayjs().subtract(60, "days").toISOString(),
    updatedAt: dayjs().subtract(15, "days").toISOString(),
    createdBy: "coach-3",
  },
  {
    id: "template-4",
    name: "Productivity Blocks",
    description: "Identify blockers: procrastination, perfectionism, distraction, prioritization, burnout. Output: primary/secondary blockers + tactics.",
    questions: [
      {
        id: "q-4-1",
        type: "likert",
        question: "I often put off important tasks until the last minute",
        required: true,
        options: ["Never", "Rarely", "Sometimes", "Often", "Always"],
        scale: 5,
        order: 1,
        category: "Procrastination",
      },
      {
        id: "q-4-2",
        type: "likert",
        question: "I spend too much time perfecting work that is already good enough",
        required: true,
        options: ["Never", "Rarely", "Sometimes", "Often", "Always"],
        scale: 5,
        order: 2,
        category: "Perfectionism",
      },
      {
        id: "q-4-3",
        type: "likert",
        question: "I get easily distracted by social media, emails, or other interruptions",
        required: true,
        options: ["Never", "Rarely", "Sometimes", "Often", "Always"],
        scale: 5,
        order: 3,
        category: "Distraction",
      },
      {
        id: "q-4-4",
        type: "likert",
        question: "I struggle to prioritize tasks and often work on less important things first",
        required: true,
        options: ["Never", "Rarely", "Sometimes", "Often", "Always"],
        scale: 5,
        order: 4,
        category: "Prioritization",
      },
      {
        id: "q-4-5",
        type: "likert",
        question: "I feel exhausted and overwhelmed by my workload",
        required: true,
        options: ["Never", "Rarely", "Sometimes", "Often", "Always"],
        scale: 5,
        order: 5,
        category: "Burnout",
      },
      {
        id: "q-4-6",
        type: "single-select",
        question: "When you have a big project to complete, you typically:",
        required: true,
        options: ["Start immediately and work steadily", "Plan it out in detail first", "Wait until you feel motivated", "Break it into smaller tasks", "Avoid thinking about it until the deadline approaches"],
        order: 6,
        category: "Procrastination Scenarios",
      },
      {
        id: "q-4-7",
        type: "single-select",
        question: "Your colleague asks for feedback on their work. You notice several areas for improvement. You would:",
        required: true,
        options: ["Point out every single issue you see", "Focus on the 2-3 most important improvements", "Only mention positive aspects", "Ask them what specific feedback they want", "Suggest they revise it completely"],
        order: 7,
        category: "Perfectionism Scenarios",
      },
      {
        id: "q-4-8",
        type: "multi-select",
        question: "What typically distracts you when you're trying to work?",
        required: true,
        options: ["Phone notifications", "Social media", "Colleagues stopping by", "Emails", "Noise in the environment", "Personal thoughts", "Hunger/thirst", "Other"],
        order: 8,
        category: "Distraction",
      },
      {
        id: "q-4-9",
        type: "single-select",
        question: "You have 5 tasks to complete today. How do you decide which to do first?",
        required: true,
        options: ["Whatever feels easiest", "Whatever is most urgent", "Whatever is most important", "Whatever your boss asks about first", "Whatever you feel like doing", "You don't decide - you just start somewhere"],
        order: 9,
        category: "Prioritization Scenarios",
      },
      {
        id: "q-4-10",
        type: "likert",
        question: "I feel energized and motivated at the end of most workdays",
        required: true,
        options: ["Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree"],
        scale: 5,
        order: 10,
        category: "Burnout",
      },
    ],
    category: "Productivity",
    tags: ["productivity", "procrastination", "perfectionism", "focus", "prioritization", "burnout"],
    estimatedTime: 18,
    version: "1.0",
    isActive: true,
    settings: {
      allowPaging: true,
      questionsPerPage: 2,
      allowTiming: true,
      timeLimit: 25,
      allowResume: true,
      allowRandomization: true,
      showProgressBar: true,
      allowReview: true,
      allowComments: true,
      requireCompletion: true,
    },
    branding: {
      primaryColor: "#FF9800",
      secondaryColor: "#FFB74D",
      showCoachBranding: true,
      coachName: "Sarah Johnson",
    },
    createdAt: dayjs().subtract(40, "days").toISOString(),
    updatedAt: dayjs().subtract(8, "days").toISOString(),
    createdBy: "coach-1",
  },
  {
    id: "template-5",
    name: "Self-Awareness Reflection",
    description: "Open-ended prompts on strengths, weaknesses, wins/failures. Output: synthesized themes for coaching focus.",
    questions: [
      {
        id: "q-5-1",
        type: "long-text",
        question: "What are your three greatest strengths? Describe a specific situation where each strength helped you succeed.",
        required: true,
        placeholder: "Reflect on your core strengths and provide examples...",
        maxLength: 500,
        order: 1,
        category: "Strengths",
      },
      {
        id: "q-5-2",
        type: "long-text",
        question: "What are your three biggest areas for improvement? What impact do these limitations have on your life or work?",
        required: true,
        placeholder: "Be honest about areas where you could grow...",
        maxLength: 500,
        order: 2,
        category: "Weaknesses",
      },
      {
        id: "q-5-3",
        type: "long-text",
        question: "Describe a recent success or achievement. What did you do well? What factors contributed to this success?",
        required: true,
        placeholder: "Reflect on what made this achievement possible...",
        maxLength: 400,
        order: 3,
        category: "Successes",
      },
      {
        id: "q-5-4",
        type: "long-text",
        question: "Describe a recent failure or setback. What did you learn from this experience? How did you handle it?",
        required: true,
        placeholder: "Focus on the lessons and growth from this experience...",
        maxLength: 400,
        order: 4,
        category: "Failures",
      },
      {
        id: "q-5-5",
        type: "long-text",
        question: "What values are most important to you? How do these values show up in your daily decisions and actions?",
        required: true,
        placeholder: "Reflect on your core values and how they guide you...",
        maxLength: 400,
        order: 5,
        category: "Values",
      },
      {
        id: "q-5-6",
        type: "long-text",
        question: "What patterns do you notice in your behavior? Are there recurring themes in how you approach challenges or interact with others?",
        required: true,
        placeholder: "Look for patterns in your thoughts, feelings, and actions...",
        maxLength: 400,
        order: 6,
        category: "Patterns",
      },
      {
        id: "q-5-7",
        type: "long-text",
        question: "What would you like to change about yourself? What would be different if you made these changes?",
        required: true,
        placeholder: "Consider both small and significant changes you'd like to make...",
        maxLength: 400,
        order: 7,
        category: "Desired Changes",
      },
      {
        id: "q-5-8",
        type: "long-text",
        question: "What feedback have you received from others about yourself? How does this align with or differ from your self-perception?",
        required: true,
        placeholder: "Reflect on feedback from colleagues, friends, family...",
        maxLength: 400,
        order: 8,
        category: "External Feedback",
      },
    ],
    category: "Self-Reflection",
    tags: ["self-awareness", "reflection", "strengths", "weaknesses", "values", "patterns"],
    estimatedTime: 30,
    version: "1.0",
    isActive: true,
    settings: {
      allowPaging: true,
      questionsPerPage: 1,
      allowTiming: false,
      allowResume: true,
      allowRandomization: false,
      showProgressBar: true,
      allowReview: true,
      allowComments: true,
      requireCompletion: true,
    },
    branding: {
      primaryColor: "#4CAF50",
      secondaryColor: "#81C784",
      showCoachBranding: true,
      coachName: "Michael Chen",
    },
    createdAt: dayjs().subtract(50, "days").toISOString(),
    updatedAt: dayjs().subtract(12, "days").toISOString(),
    createdBy: "coach-2",
  },
  {
    id: "template-6",
    name: "Career Direction Finder",
    description: "Values/interests/preferences inventory. Output: top values and suggested role directions.",
    questions: [
      {
        id: "q-6-1",
        type: "multi-select",
        question: "Which of these work environments appeal to you most?",
        required: true,
        options: ["Fast-paced and dynamic", "Stable and predictable", "Creative and innovative", "Analytical and structured", "Collaborative and team-oriented", "Independent and autonomous", "High-pressure and challenging", "Relaxed and flexible"],
        order: 1,
        category: "Work Environment",
      },
      {
        id: "q-6-2",
        type: "multi-select",
        question: "What types of problems do you enjoy solving?",
        required: true,
        options: ["Technical/analytical problems", "People and relationship issues", "Creative and design challenges", "Strategic and planning problems", "Process and efficiency issues", "Research and discovery questions", "Sales and persuasion challenges", "Administrative and organizational problems"],
        order: 2,
        category: "Problem Solving",
      },
      {
        id: "q-6-3",
        type: "rating",
        question: "How important is helping others in your work?",
        required: true,
        options: ["1 - Not Important", "2", "3", "4", "5 - Very Important"],
        order: 3,
        category: "Values",
      },
      {
        id: "q-6-4",
        type: "rating",
        question: "How important is financial security in your career decisions?",
        required: true,
        options: ["1 - Not Important", "2", "3", "4", "5 - Very Important"],
        order: 4,
        category: "Values",
      },
      {
        id: "q-6-5",
        type: "rating",
        question: "How important is work-life balance to you?",
        required: true,
        options: ["1 - Not Important", "2", "3", "4", "5 - Very Important"],
        order: 5,
        category: "Values",
      },
      {
        id: "q-6-6",
        type: "multi-select",
        question: "What skills do you most enjoy using?",
        required: true,
        options: ["Writing and communication", "Data analysis and numbers", "Design and creativity", "Leadership and management", "Technical and programming", "Sales and persuasion", "Research and investigation", "Teaching and training"],
        order: 6,
        category: "Skills",
      },
      {
        id: "q-6-7",
        type: "single-select",
        question: "When working on a project, you prefer to:",
        required: true,
        options: ["Work independently and present finished results", "Collaborate closely with a team throughout", "Lead the project and delegate tasks", "Research and analyze before making decisions", "Start with a creative vision and iterate", "Follow established processes and procedures"],
        order: 7,
        category: "Work Style",
      },
      {
        id: "q-6-8",
        type: "multi-select",
        question: "What industries interest you most?",
        required: true,
        options: ["Technology and software", "Healthcare and wellness", "Education and training", "Finance and banking", "Creative arts and media", "Non-profit and social impact", "Manufacturing and engineering", "Retail and consumer goods", "Government and public service", "Consulting and professional services"],
        order: 8,
        category: "Industry Interests",
      },
      {
        id: "q-6-9",
        type: "long-text",
        question: "What activities or hobbies do you enjoy outside of work? How might these interests translate to a career?",
        required: true,
        placeholder: "Reflect on your hobbies and how they might connect to work...",
        maxLength: 300,
        order: 9,
        category: "Personal Interests",
      },
      {
        id: "q-6-10",
        type: "long-text",
        question: "What would your ideal workday look like? Describe the activities, environment, and people you'd want to work with.",
        required: true,
        placeholder: "Paint a picture of your perfect workday...",
        maxLength: 400,
        order: 10,
        category: "Ideal Workday",
      },
    ],
    category: "Career Development",
    tags: ["career", "values", "interests", "skills", "work style", "direction"],
    estimatedTime: 22,
    version: "1.0",
    isActive: true,
    settings: {
      allowPaging: true,
      questionsPerPage: 2,
      allowTiming: true,
      timeLimit: 30,
      allowResume: true,
      allowRandomization: false,
      showProgressBar: true,
      allowReview: true,
      allowComments: true,
      requireCompletion: true,
    },
    branding: {
      primaryColor: "#607D8B",
      secondaryColor: "#90A4AE",
      showCoachBranding: true,
      coachName: "Emma Rodriguez",
    },
    createdAt: dayjs().subtract(35, "days").toISOString(),
    updatedAt: dayjs().subtract(7, "days").toISOString(),
    createdBy: "coach-3",
  },
];

// Mock Assessment Assignments
const assessmentAssignments: AssessmentAssignment[] = [
  {
    id: "assignment-1",
    assessmentId: "template-1",
    clientId: "client-1",
    coachId: "coach-1",
    assignedAt: dayjs().subtract(7, "days").toISOString(),
    dueDate: dayjs().add(7, "days").toISOString(),
    status: "in-progress",
    startedAt: dayjs().subtract(5, "days").toISOString(),
    timeSpent: 8,
    progress: 60,
    lastAccessedAt: dayjs().subtract(1, "day").toISOString(),
    settings: assessmentTemplates[0].settings,
    branding: assessmentTemplates[0].branding,
  },
  {
    id: "assignment-2",
    assessmentId: "template-2",
    clientId: "client-2",
    coachId: "coach-2",
    assignedAt: dayjs().subtract(3, "days").toISOString(),
    dueDate: dayjs().add(10, "days").toISOString(),
    status: "assigned",
    progress: 0,
    lastAccessedAt: dayjs().subtract(3, "days").toISOString(),
    settings: assessmentTemplates[1].settings,
    branding: assessmentTemplates[1].branding,
  },
  {
    id: "assignment-3",
    assessmentId: "template-3",
    clientId: "client-3",
    coachId: "coach-1",
    assignedAt: dayjs().subtract(14, "days").toISOString(),
    dueDate: dayjs().subtract(2, "days").toISOString(),
    status: "completed",
    startedAt: dayjs().subtract(12, "days").toISOString(),
    completedAt: dayjs().subtract(2, "days").toISOString(),
    timeSpent: 18,
    progress: 100,
    lastAccessedAt: dayjs().subtract(2, "days").toISOString(),
    settings: assessmentTemplates[2].settings,
    branding: assessmentTemplates[2].branding,
  },
  {
    id: "assignment-4",
    assessmentId: "template-4",
    clientId: "client-1",
    coachId: "coach-1",
    assignedAt: dayjs().subtract(2, "days").toISOString(),
    dueDate: dayjs().add(5, "days").toISOString(),
    status: "assigned",
    progress: 0,
    lastAccessedAt: dayjs().subtract(2, "days").toISOString(),
    settings: assessmentTemplates[3].settings,
    branding: assessmentTemplates[3].branding,
  },
  {
    id: "assignment-5",
    assessmentId: "template-5",
    clientId: "client-2",
    coachId: "coach-2",
    assignedAt: dayjs().subtract(1, "day").toISOString(),
    dueDate: dayjs().add(14, "days").toISOString(),
    status: "assigned",
    progress: 0,
    lastAccessedAt: dayjs().subtract(1, "day").toISOString(),
    settings: assessmentTemplates[4].settings,
    branding: assessmentTemplates[4].branding,
  },
];

// Mock Assessment Results
const assessmentResults: AssessmentResult[] = [
  {
    id: "result-1",
    assignmentId: "assignment-3",
    assessmentId: "template-3",
    clientId: "client-3",
    coachId: "coach-1",
    responses: [
      {
        id: "response-1",
        assignmentId: "assignment-3",
        questionId: "q-3-1",
        answer: "Agree",
        timeSpent: 45,
        answeredAt: dayjs().subtract(12, "days").toISOString(),
      },
      {
        id: "response-2",
        assignmentId: "assignment-3",
        questionId: "q-3-2",
        answer: "Agree",
        timeSpent: 60,
        answeredAt: dayjs().subtract(12, "days").toISOString(),
      },
      {
        id: "response-3",
        assignmentId: "assignment-3",
        questionId: "q-3-3",
        answer: "Strongly Agree",
        timeSpent: 30,
        answeredAt: dayjs().subtract(12, "days").toISOString(),
      },
    ],
    totalScore: 75,
    maxScore: 100,
    percentageScore: 75,
    timeSpent: 18,
    completedAt: dayjs().subtract(2, "days").toISOString(),
    analysis: {
      categoryBreakdown: {
        "Self-Awareness": 80,
        "Self-Regulation": 75,
        "Empathy": 90,
        "Social Skills": 70,
        "Motivation": 75,
      },
      strengthAreas: ["High empathy", "Strong self-awareness"],
      improvementAreas: ["Social skills", "Stress management"],
      trendAnalysis: {
        improvement: 15,
        trend: "improving",
      },
      insights: ["Client shows strong emotional intelligence foundation", "Areas for growth in social interactions identified"],
      riskFactors: ["Limited social skills", "Stress management challenges"],
    },
    recommendations: [
      "Practice active listening in social situations",
      "Develop stress management techniques",
      "Build confidence in group interactions",
    ],
    status: "completed",
  },
  {
    id: "result-2",
    assignmentId: "assignment-1",
    assessmentId: "template-1",
    clientId: "client-1",
    coachId: "coach-1",
    responses: [
      {
        id: "response-4",
        assignmentId: "assignment-1",
        questionId: "q-1-1",
        answer: "I want to start my own consulting business within the next year",
        timeSpent: 120,
        answeredAt: dayjs().subtract(5, "days").toISOString(),
      },
      {
        id: "response-5",
        assignmentId: "assignment-1",
        questionId: "q-1-2",
        answer: "9",
        timeSpent: 30,
        answeredAt: dayjs().subtract(5, "days").toISOString(),
      },
    ],
    totalScore: 60,
    maxScore: 100,
    percentageScore: 60,
    timeSpent: 8,
    completedAt: null,
    analysis: {
      categoryBreakdown: {
        "Goal Definition": 85,
        "Goal Importance": 90,
        "Obstacles": 40,
        "Timeline": 60,
        "Success Metrics": 45,
        "First Step": 50,
        "Confidence Level": 70,
      },
      strengthAreas: ["Clear goal definition", "High motivation"],
      improvementAreas: ["Action planning", "Obstacle identification"],
      trendAnalysis: {
        improvement: 0,
        trend: "stable",
      },
      insights: ["Client has strong vision but needs help with execution planning"],
      riskFactors: ["Lack of concrete action steps", "Unclear success metrics"],
    },
    recommendations: [
      "Break down the goal into specific milestones",
      "Identify and address specific obstacles",
      "Create detailed action plan with timelines",
    ],
    status: "draft",
  },
];

// Mock Sessions
const sessions: Session[] = Array.from({ length: 60 }, (_, i) => ({
  id: `session-${i + 1}`,
  clientId: clients[i % clients.length]?.id || "client-1",
  coachId: coaches[i % coaches.length]?.id || "coach-1",
  programId: programs[i % programs.length]?.id,
  date: dayjs()
    .add(Math.random() * 30, "days")
    .toISOString(),
  duration: [30, 45, 60, 90][i % 4],
  status: ["scheduled", "completed", "scheduled", "completed"][i % 4] as any,
  notes: i % 3 === 0 ? "Initial consultation notes" : undefined,
  type: ["initial", "follow-up", "assessment", "milestone"][i % 4] as any,
  createdAt: dayjs()
    .subtract(Math.random() * 180, "days")
    .toISOString(),
}));

// Mock Tasks
// Mock Goals
const goals: Goal[] = [
  {
    id: "goal-1",
    title: "Career Advancement",
    description: "Secure a senior management position within the next 12 months by developing leadership skills and expanding professional network.",
    category: "Career Development",
    clientId: "client-1",
    coachId: "coach-1",
    targetDate: dayjs().add(12, "months").toISOString(),
    successCriteria: [
      "Obtain senior management role",
      "Complete leadership training program",
      "Build network of 50+ industry professionals",
      "Achieve 20% salary increase"
    ],
    status: "active",
    progress: 35,
    milestones: [],
    metrics: [],
    createdAt: dayjs().subtract(60, "days").toISOString(),
    updatedAt: dayjs().subtract(5, "days").toISOString(),
  },
  {
    id: "goal-2",
    title: "Work-Life Balance",
    description: "Establish healthy boundaries between work and personal life to reduce stress and improve overall well-being.",
    category: "Wellness",
    clientId: "client-2",
    coachId: "coach-2",
    targetDate: dayjs().add(6, "months").toISOString(),
    successCriteria: [
      "Work no more than 45 hours per week",
      "Take 2 full weekends off per month",
      "Exercise 4 times per week",
      "Spend quality time with family daily"
    ],
    status: "active",
    progress: 60,
    milestones: [],
    metrics: [],
    createdAt: dayjs().subtract(90, "days").toISOString(),
    updatedAt: dayjs().subtract(2, "days").toISOString(),
  },
  {
    id: "goal-3",
    title: "Stress Management",
    description: "Develop effective stress management techniques and implement daily wellness practices.",
    category: "Wellness",
    clientId: "client-3",
    coachId: "coach-1",
    targetDate: dayjs().add(3, "months").toISOString(),
    successCriteria: [
      "Practice meditation daily for 20 minutes",
      "Reduce stress levels by 40%",
      "Improve sleep quality to 8 hours per night",
      "Learn 5 stress management techniques"
    ],
    status: "active",
    progress: 75,
    milestones: [],
    metrics: [],
    createdAt: dayjs().subtract(45, "days").toISOString(),
    updatedAt: dayjs().subtract(1, "day").toISOString(),
  },
  {
    id: "goal-4",
    title: "Leadership Development",
    description: "Enhance leadership skills and become an effective team leader within the organization.",
    category: "Leadership",
    clientId: "client-4",
    coachId: "coach-3",
    targetDate: dayjs().add(9, "months").toISOString(),
    successCriteria: [
      "Lead a team of 5+ people successfully",
      "Complete advanced leadership course",
      "Receive positive feedback from team members",
      "Implement process improvements"
    ],
    status: "active",
    progress: 25,
    milestones: [],
    metrics: [],
    createdAt: dayjs().subtract(120, "days").toISOString(),
    updatedAt: dayjs().subtract(10, "days").toISOString(),
  },
  {
    id: "goal-5",
    title: "Skill Development",
    description: "Acquire new technical skills and certifications to advance in current role.",
    category: "Professional Development",
    clientId: "client-5",
    coachId: "coach-2",
    targetDate: dayjs().add(6, "months").toISOString(),
    successCriteria: [
      "Complete 3 online courses",
      "Obtain 2 professional certifications",
      "Apply new skills in current projects",
      "Receive recognition from management"
    ],
    status: "paused",
    progress: 40,
    milestones: [],
    metrics: [],
    createdAt: dayjs().subtract(75, "days").toISOString(),
    updatedAt: dayjs().subtract(30, "days").toISOString(),
  },
];

// Mock Goal Milestones
const goalMilestones: GoalMilestone[] = [
  {
    id: "milestone-1",
    goalId: "goal-1",
    title: "Complete Leadership Assessment",
    description: "Take comprehensive leadership assessment to identify strengths and areas for improvement.",
    targetDate: dayjs().add(2, "months").toISOString(),
    status: "completed",
    completedAt: dayjs().subtract(15, "days").toISOString(),
    order: 1,
    createdAt: dayjs().subtract(60, "days").toISOString(),
  },
  {
    id: "milestone-2",
    goalId: "goal-1",
    title: "Enroll in Leadership Program",
    description: "Register for advanced leadership development program.",
    targetDate: dayjs().add(4, "months").toISOString(),
    status: "in-progress",
    order: 2,
    createdAt: dayjs().subtract(60, "days").toISOString(),
  },
  {
    id: "milestone-3",
    goalId: "goal-1",
    title: "Network Building",
    description: "Attend 5 industry events and connect with 20+ professionals.",
    targetDate: dayjs().add(6, "months").toISOString(),
    status: "pending",
    order: 3,
    createdAt: dayjs().subtract(60, "days").toISOString(),
  },
  {
    id: "milestone-4",
    goalId: "goal-2",
    title: "Establish Work Boundaries",
    description: "Set clear start and end times for work, and stick to them.",
    targetDate: dayjs().add(1, "month").toISOString(),
    status: "completed",
    completedAt: dayjs().subtract(20, "days").toISOString(),
    order: 1,
    createdAt: dayjs().subtract(90, "days").toISOString(),
  },
  {
    id: "milestone-5",
    goalId: "goal-2",
    title: "Create Exercise Routine",
    description: "Develop and implement consistent exercise schedule.",
    targetDate: dayjs().add(2, "months").toISOString(),
    status: "in-progress",
    order: 2,
    createdAt: dayjs().subtract(90, "days").toISOString(),
  },
];

// Mock Goal Metrics
const goalMetrics: GoalMetric[] = [
  {
    id: "metric-1",
    goalId: "goal-1",
    name: "Leadership Score",
    unit: "points",
    frequency: "monthly",
    target: 85,
    currentValue: 72,
    history: [
      { id: "hist-1", metricId: "metric-1", value: 65, date: dayjs().subtract(3, "months").toISOString() },
      { id: "hist-2", metricId: "metric-1", value: 68, date: dayjs().subtract(2, "months").toISOString() },
      { id: "hist-3", metricId: "metric-1", value: 72, date: dayjs().subtract(1, "month").toISOString() },
    ],
    createdAt: dayjs().subtract(60, "days").toISOString(),
  },
  {
    id: "metric-2",
    goalId: "goal-2",
    name: "Weekly Work Hours",
    unit: "hours",
    frequency: "weekly",
    target: 45,
    currentValue: 48,
    history: [
      { id: "hist-4", metricId: "metric-2", value: 52, date: dayjs().subtract(4, "weeks").toISOString() },
      { id: "hist-5", metricId: "metric-2", value: 50, date: dayjs().subtract(3, "weeks").toISOString() },
      { id: "hist-6", metricId: "metric-2", value: 48, date: dayjs().subtract(2, "weeks").toISOString() },
    ],
    createdAt: dayjs().subtract(90, "days").toISOString(),
  },
  {
    id: "metric-3",
    goalId: "goal-3",
    name: "Stress Level",
    unit: "scale 1-10",
    frequency: "daily",
    target: 4,
    currentValue: 5,
    history: [
      { id: "hist-7", metricId: "metric-3", value: 8, date: dayjs().subtract(7, "days").toISOString() },
      { id: "hist-8", metricId: "metric-3", value: 7, date: dayjs().subtract(6, "days").toISOString() },
      { id: "hist-9", metricId: "metric-3", value: 6, date: dayjs().subtract(5, "days").toISOString() },
      { id: "hist-10", metricId: "metric-3", value: 5, date: dayjs().subtract(4, "days").toISOString() },
    ],
    createdAt: dayjs().subtract(45, "days").toISOString(),
  },
];

// Mock Tasks
const tasks: Task[] = [
  {
    id: "task-1",
    title: "Complete Leadership Assessment",
    description: "Take the comprehensive leadership assessment to identify strengths and areas for improvement.",
    clientId: "client-1",
    coachId: "coach-1",
    goalId: "goal-1",
    status: "completed",
    priority: "high",
    dueDate: dayjs().subtract(15, "days").toISOString(),
    completedAt: dayjs().subtract(15, "days").toISOString(),
    recurrence: "none",
    attachments: ["assessment.pdf"],
    notes: ["Assessment completed successfully", "Identified key areas for development"],
    timeSpent: 45,
    createdAt: dayjs().subtract(60, "days").toISOString(),
    updatedAt: dayjs().subtract(15, "days").toISOString(),
  },
  {
    id: "task-2",
    title: "Research Leadership Programs",
    description: "Research and compare different leadership development programs available.",
    clientId: "client-1",
    coachId: "coach-1",
    goalId: "goal-1",
    status: "in-progress",
    priority: "medium",
    dueDate: dayjs().add(1, "week").toISOString(),
    recurrence: "none",
    attachments: ["program_comparison.xlsx"],
    notes: ["Found 3 promising programs", "Need to check reviews and testimonials"],
    timeSpent: 120,
    createdAt: dayjs().subtract(45, "days").toISOString(),
    updatedAt: dayjs().subtract(2, "days").toISOString(),
  },
  {
    id: "task-3",
    title: "Set Work Schedule Boundaries",
    description: "Establish clear start and end times for work, and communicate to team.",
    clientId: "client-2",
    coachId: "coach-2",
    goalId: "goal-2",
    status: "completed",
    priority: "high",
    dueDate: dayjs().subtract(20, "days").toISOString(),
    completedAt: dayjs().subtract(20, "days").toISOString(),
    recurrence: "none",
    attachments: ["schedule_policy.pdf"],
    notes: ["Boundaries set successfully", "Team informed and supportive"],
    timeSpent: 30,
    createdAt: dayjs().subtract(90, "days").toISOString(),
    updatedAt: dayjs().subtract(20, "days").toISOString(),
  },
  {
    id: "task-4",
    title: "Daily Meditation Practice",
    description: "Practice meditation for 20 minutes each morning to reduce stress.",
    clientId: "client-3",
    coachId: "coach-1",
    goalId: "goal-3",
    status: "in-progress",
    priority: "medium",
    dueDate: dayjs().add(1, "day").toISOString(),
    recurrence: "daily",
    attachments: ["meditation_app.mp4"],
    notes: ["Consistent for 2 weeks", "Feeling more centered"],
    timeSpent: 280,
    createdAt: dayjs().subtract(45, "days").toISOString(),
    updatedAt: dayjs().subtract(1, "day").toISOString(),
  },
  {
    id: "task-5",
    title: "Exercise Routine Planning",
    description: "Create a weekly exercise schedule that fits with current commitments.",
    clientId: "client-2",
    coachId: "coach-2",
    goalId: "goal-2",
    status: "in-progress",
    priority: "medium",
    dueDate: dayjs().add(3, "days").toISOString(),
    recurrence: "none",
    attachments: ["fitness_plan.pdf"],
    notes: ["Schedule created", "Need to start implementation"],
    timeSpent: 60,
    createdAt: dayjs().subtract(30, "days").toISOString(),
    updatedAt: dayjs().subtract(5, "days").toISOString(),
  },
  {
    id: "task-6",
    title: "Team Leadership Workshop",
    description: "Attend workshop on effective team leadership and management.",
    clientId: "client-4",
    coachId: "coach-3",
    goalId: "goal-4",
    status: "pending",
    priority: "high",
    dueDate: dayjs().add(2, "weeks").toISOString(),
    recurrence: "none",
    attachments: ["workshop_brochure.pdf"],
    notes: ["Workshop confirmed", "Pre-reading materials received"],
    timeSpent: 0,
    createdAt: dayjs().subtract(30, "days").toISOString(),
    updatedAt: dayjs().subtract(1, "week").toISOString(),
  },
  {
    id: "task-7",
    title: "Personal Reading Time",
    description: "Read leadership books for 30 minutes each evening.",
    clientId: "client-4",
    coachId: "coach-3",
    goalId: "goal-4",
    status: "pending",
    priority: "low",
    dueDate: dayjs().add(1, "day").toISOString(),
    recurrence: "daily",
    attachments: ["book_list.pdf"],
    notes: ["Reading 'The Leadership Challenge'", "Making good progress"],
    timeSpent: 480,
    createdAt: dayjs().subtract(60, "days").toISOString(),
    updatedAt: dayjs().subtract(1, "day").toISOString(),
  },
  {
    id: "task-8",
    title: "Online Course Completion",
    description: "Complete the advanced project management course.",
    clientId: "client-5",
    coachId: "coach-2",
    goalId: "goal-5",
    status: "cancelled",
    priority: "medium",
    dueDate: dayjs().add(1, "month").toISOString(),
    recurrence: "none",
    attachments: ["course_materials.zip"],
    notes: ["Course 60% complete", "On hold due to work commitments"],
    timeSpent: 480,
    createdAt: dayjs().subtract(75, "days").toISOString(),
    updatedAt: dayjs().subtract(30, "days").toISOString(),
  },
];

// Mock Attachments
const attachments: Attachment[] = [
  {
    id: 'att-1',
    name: 'coaching-plan.pdf',
    type: 'pdf',
    url: 'https://example.com/files/coaching-plan.pdf',
    size: 2048576, // 2MB
    mimeType: 'application/pdf',
    isVirusScanned: true,
    virusScanStatus: 'clean',
    cdnUrl: 'https://cdn.example.com/files/coaching-plan.pdf',
    createdAt: dayjs().subtract(2, 'days').toISOString(),
  },
  {
    id: 'att-2',
    name: 'progress-chart.png',
    type: 'image',
    url: 'https://example.com/images/progress-chart.png',
    size: 512000, // 500KB
    mimeType: 'image/png',
    isVirusScanned: true,
    virusScanStatus: 'clean',
    cdnUrl: 'https://cdn.example.com/images/progress-chart.png',
    thumbnailUrl: 'https://cdn.example.com/images/progress-chart-thumb.png',
    createdAt: dayjs().subtract(1, 'day').toISOString(),
  },
  {
    id: 'att-3',
    name: 'assessment-results.pdf',
    type: 'pdf',
    url: 'https://example.com/files/assessment-results.pdf',
    size: 1048576, // 1MB
    mimeType: 'application/pdf',
    isVirusScanned: true,
    virusScanStatus: 'clean',
    cdnUrl: 'https://cdn.example.com/files/assessment-results.pdf',
    createdAt: dayjs().subtract(3, 'days').toISOString(),
  },
];

// Mock Messages
const messages: Message[] = Array.from(
  { length: 50 },
  (_, i) => ({
    id: `msg-${i + 1}`,
    threadId: `thread-${Math.floor(i / 5) + 1}`,
    senderId: i % 2 === 0 ? users[0]?.id || "user-1" : coaches[i % coaches.length]?.id || "coach-1",
    content: [
      "Great progress on your goals this week! Let's discuss the next steps.",
      "I've attached the updated coaching plan. Please review and let me know your thoughts.",
      "How are you feeling about the new strategies we discussed?",
      "Your assessment results are ready. I can see some areas for improvement.",
      "Let's schedule our next session. What time works best for you?",
      "I'm here to support you. Don't hesitate to reach out if you need anything.",
      "The exercises we practiced seem to be working well. Keep it up!",
      "I've noticed some positive changes in your approach. Well done!",
      "Let me know if you have any questions about the materials I sent.",
      "We're making excellent progress. I'm proud of your dedication.",
    ][i % 10],
    attachments: i % 3 === 0 ? [attachments[i % attachments.length]] : [],
    isRead: i % 4 !== 0,
    readBy: i % 4 !== 0 ? [users[0]?.id || "user-1"] : [],
    readAt: i % 4 !== 0 ? dayjs().subtract(Math.random() * 24, 'hours').toISOString() : undefined,
    isTyping: false,
    createdAt: dayjs().subtract(Math.random() * 7, 'days').toISOString(),
    editedAt: i % 5 === 0 ? dayjs().subtract(Math.random() * 6, 'days').toISOString() : undefined,
    isDeleted: false,
    moderationStatus: 'approved' as const,
    reportCount: 0,
  }),
);

// Mock Message Threads
const messageThreads: MessageThread[] = Array.from(
  { length: 12 },
  (_, i) => ({
    id: `thread-${i + 1}`,
    participants: [
      users[0]?.id || "user-1",
      coaches[i % coaches.length]?.id || "coach-1",
    ],
    subject: [
      "Weekly Progress Check-in",
      "Coaching Plan Discussion",
      "Assessment Results Review",
      "Goal Setting Session",
      "Strategy Implementation",
      "Challenge Support",
      "Success Celebration",
      "Next Steps Planning",
      "Resource Sharing",
      "Feedback Discussion",
      "Milestone Review",
      "Future Planning",
    ][i],
    lastMessage: messages[i] || {
      id: `msg-${i + 1}`,
      threadId: `thread-${i + 1}`,
      senderId: coaches[i % coaches.length]?.id || "coach-1",
      content: `Last message content for thread ${i + 1}`,
      attachments: [],
      isRead: false,
      readBy: [],
      isTyping: false,
      createdAt: dayjs().subtract(Math.random() * 7, "days").toISOString(),
      isDeleted: false,
      moderationStatus: 'approved' as const,
      reportCount: 0,
    },
    unreadCount: Math.floor(Math.random() * 5),
    isMuted: i % 5 === 0,
    isArchived: i % 7 === 0,
    retentionPolicy: ['7days', '30days', '90days', '1year', 'permanent'][i % 5] as any,
    createdAt: dayjs()
      .subtract(Math.random() * 30, "days")
      .toISOString(),
    updatedAt: dayjs()
      .subtract(Math.random() * 7, "days")
      .toISOString(),
  }),
);

// Mock Typing Indicators
const typingIndicators: TypingIndicator[] = [
  {
    id: "typing-1",
    userId: users[0]?.id || "user-1",
    threadId: "thread-1",
    isTyping: true,
    lastActivity: dayjs().toISOString(),
  },
];

// Mock Moderation Reports
const moderationReports: ModerationReport[] = [
  {
    id: 'report-1',
    messageId: 'msg-1',
    threadId: 'thread-1',
    reporterId: users[0]?.id || "user-1",
    reason: 'inappropriate',
    description: 'Message contains inappropriate content',
    status: 'pending',
    createdAt: dayjs().subtract(1, 'day').toISOString(),
  },
  {
    id: 'report-2',
    messageId: 'msg-5',
    threadId: 'thread-2',
    reporterId: coaches[0]?.id || "coach-1",
    reason: 'spam',
    description: 'Repeated promotional messages',
    status: 'reviewed',
    moderatorId: users[0]?.id || "user-1",
    actionTaken: 'warned',
    createdAt: dayjs().subtract(3, 'days').toISOString(),
    resolvedAt: dayjs().subtract(2, 'days').toISOString(),
  },
];

// Mock Audit Logs
const auditLogs: AuditLog[] = [
  {
    id: 'audit-1',
    action: 'message_sent',
    userId: users[0]?.id || "user-1",
    targetId: 'msg-1',
    details: { threadId: 'thread-1', contentLength: 45 },
    ipAddress: '192.168.1.100',
    userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)',
    createdAt: dayjs().subtract(1, 'hour').toISOString(),
  },
  {
    id: 'audit-2',
    action: 'moderation_action',
    userId: users[0]?.id || "user-1",
    targetId: 'msg-5',
    details: { action: 'warned', reason: 'spam' },
    ipAddress: '192.168.1.100',
    userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)',
    createdAt: dayjs().subtract(2, 'hours').toISOString(),
  },
];

// Mock Invoices
const invoices: Invoice[] = Array.from({ length: 24 }, (_, i) => ({
  id: `invoice-${i + 1}`,
  clientId: clients[i % clients.length]?.id || "client-1",
  coachId: coaches[i % coaches.length]?.id || "coach-1",
  amount: [150, 200, 300, 450][i % 4],
  currency: "USD",
  status: ["draft", "sent", "paid", "overdue"][i % 4] as any,
  dueDate: dayjs()
    .add(Math.random() * 30, "days")
    .toISOString(),
  paidAt:
    i % 4 === 2
      ? dayjs()
          .subtract(Math.random() * 7, "days")
          .toISOString()
      : undefined,
  items: [
    {
      id: `item-${i + 1}`,
      description: "Coaching Session",
      quantity: 1,
      unitPrice: [150, 200, 300, 450][i % 4],
      total: [150, 200, 300, 450][i % 4],
    },
  ],
  createdAt: dayjs()
    .subtract(Math.random() * 180, "days")
    .toISOString(),
}));

// Mock Invitations and Coach Requests
const invitations: Invitation[] = [];
const coachRequests: CoachRequest[] = [];

// Mock Dashboard Summary
const dashboardSummary: DashboardSummary = {
  activeClients: clients.filter((c) => c.status === "active").length,
  completionRate: 78.5,
  upcomingSessions: sessions.filter(
    (s) => s.status === "scheduled" && dayjs(s.date).isAfter(dayjs()),
  ).length,
  revenueMTD: invoices
    .filter(
      (i) =>
        i.status === "paid" &&
        dayjs(i.paidAt).isAfter(dayjs().startOf("month")),
    )
    .reduce((sum, i) => sum + i.amount, 0),
  recentActivity: [
    {
      type: "session",
      description: "New session scheduled with Client 1",
      timestamp: dayjs().subtract(1, "hour").toISOString(),
    },
    {
      type: "assessment",
      description: "Assessment completed by Client 2",
      timestamp: dayjs().subtract(3, "hours").toISOString(),
    },
    {
      type: "task",
      description: 'Task "Follow-up call" completed',
      timestamp: dayjs().subtract(6, "hours").toISOString(),
    },
  ],
};

// Update relationships
clients.forEach((client) => {
  if (client.coachId) {
    const coach = coaches.find((c) => c.id === client.coachId);
    if (coach) coach.clients.push(client.id);
  }
  if (client.programId) {
    const program = programs.find((p) => p.id === client.programId);
    if (program) program.clients.push(client.id);
  }
});

coaches.forEach((coach) => {
  coach.sessions = sessions.filter((s) => s.coachId === coach.id).map(s => s.id);
});

clients.forEach((client) => {
  client.sessions = sessions.filter((s) => s.clientId === client.id);
  client.tasks = tasks.filter((t) => t.clientId === client.id);
  client.invoices = invoices.filter((i) => i.clientId === client.id);
});

// Update goal relationships
goals.forEach((goal) => {
  goal.milestones = goalMilestones.filter((m) => m.goalId === goal.id);
  goal.metrics = goalMetrics.filter((m) => m.goalId === goal.id);
});

// Export all data
export {
  users,
  clients,
  coaches,
  programs,
  sessions,
  tasks,
  goals,
  goalMilestones,
  goalMetrics,
  attachments,
  messageThreads,
  messages,
  typingIndicators,
  moderationReports,
  auditLogs,
  invoices,
  assessmentTemplates,
  assessmentAssignments,
  assessmentResults,
  dashboardSummary,
  invitations,
  coachRequests,
};
